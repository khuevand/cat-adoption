// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
    directUrl = env("DIRECT_URL")
}

enum Sex {
  MALE
  FEMALE
  UNKNOWN
}

enum ApplicationStatus {
  PENDING
  UNDER_REVIEW
  APPROVED
  REJECTED
  WITHDRAWN
}

model User {
    id String @id
    name String
    email String
    createdAt DateTime @default(now())
    applications Application[]
    donation Donation[]
    totalDonation Int
    cat Cat[]   

    @@index([email])
}

model Admin {
    id String @id
    name String
    email String
    createdAt DateTime @default(now())
    applications Application[]

    @@index([email])
}

model Donation {
    id String @id @default(cuid())
    total Int
    user User @relation(fields: [userId], reference: [id])
    userId String

    @@index([id])
}

model Applications {
    id String @id @default(cuid())
    cat Cat @relation(fields: [catId], reference: [id], onDelete: Cascade)
    catId String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    form String
    user User @relation(fields: [userId], reference: [id], onDelete: Cascade)
    admin Admin @relation(fields: [adminId], reference: [id], onDelete: Cascade)
    userId String
    adminId String
    status ApplicationStatus @default(PENDING)
    form Json

    @@index([userId])
    @@index([adminId])
    @@index([catId, status])
}

model Cat {
    id String @id @default(cuid())
    name String
    sex Sex @default(UNKNOWN)
    ageMonths Int
    desexed boolean @default(false)
    vaccinated boolean @default(false)
    description String
    status String @default(AVAILABLE)
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    user User @relation(fields: [userId], reference: [id], onDelete: Cascade)
    userId String ?

    @@index([id])
}

